name: Build and Release VoicemeeterBypass

on:
  push:
    tags:
      - 'v*'  # Se ejecuta cuando se crea un nuevo tag que sigue el patrón 'v*'

jobs:
  build:
    if: github.ref == 'refs/heads/main'
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Zig
        run: |
          choco install zig --pre

      - name: Compile with Zig
        run: |
          zig cc -o "./VoicemeeterBypass.exe" "./src/VoicemeeterBypass.c"

      - name: Upload compiled file
        uses: actions/upload-artifact@v3
        with:
          name: VoicemeeterBypass
          path: ./VoicemeeterBypass.exe

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download compiled file
        uses: actions/download-artifact@v3
        with:
          name: VoicemeeterBypass

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}  # Utiliza el tag que activó la acción
          release_name: "Release ${{ github.ref }}"
          body: "Release de VoicemeeterBypass compilado."
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./VoicemeeterBypass.exe
          asset_name: VoicemeeterBypass.exe
          asset_content_type: application/octet-stream
